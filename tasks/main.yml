---
# tasks file for nginx-docker


#############################
# Setup dockerhost
#############################

- name: Get dockerhost
  shell: /sbin/ip route | awk '/docker0/ { print $NF }'
  register: dockerhost_response
  when: dockerhost_ip is not defined

- set_fact:
    dockerhost_ip:    "{{ dockerhost_response.stdout }}"
  when: dockerhost_ip is not defined


#############################
# Create config directories
#############################

- name: Make sure config directories exist
  file:
    path: "{{ item }}"
    state: directory
  with_list: '{{
         [ nginx_config_dir ] +
        ([ nginx_cert_dir] if nginx_secured
               else [])
      }}'


#############################
# Setup nginx
#############################

- name:    "Create nginx config"
  template:
    src:   templates/nginx.conf.j2
    dest:  "{{ nginx_config_dir }}/nginx.conf"
  notify: restart_nginx_container

- name: "Pull nginx image - nginx:{{ nginx_docker_image_tag }}"
  docker_image:
    name: 'nginx'
    tag:  '{{ nginx_docker_image_tag }}'

- name: Setup nginx container
  docker_container:
    name:  "{{ nginx_container_name }}"
    image: "nginx:{{ nginx_docker_image_tag }}"
    state: started
    ports: ["80:80", "443:443"]
    volumes: '{{
         [ nginx_config_dir + "/nginx.conf:/etc/nginx/nginx.conf:ro" ] +
        ([ nginx_cert_dir + ":" + nginx_cert_dir ] if nginx_secured else [])
      }}'

    log_driver:   "{{ nginx_logger }}"
    log_options:  "{{ nginx_log_opts }}"

  register: nginx_container

- meta: flush_handlers

- name: Wait until nginx is available
  wait_for: port=80 delay=3
  when: nginx_container.changed