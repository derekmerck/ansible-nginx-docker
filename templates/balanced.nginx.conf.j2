user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {

    # Each received instance <= 8M (MR is _big_)
    # Must be larger for archive web portal
    client_max_body_size 10M;
    client_body_buffer_size 10M;

    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;
    sendfile        on;
    keepalive_timeout  65;

    {% if nginx_upstreams | default(false) %}{% for channel in nginx_upstreams -%}
    upstream {{ channel.upstream }} {
        {% for balancer in channel.pool -%}
        server {{ balancer.host | default(dockerhost_ip) }}:{{ balancer.port }};
        {% endfor %}
    }
    {% endfor %}{% endif %}


    server {
        listen 80;

        {%  if secure is defined -%}
        listen 443 ssl;
        server_name {{ secure['common_name'] }};
        ssl_certificate {{ secure['cert_dir'] }}/crt/{{ secure['common_name'] }}.crt;
        ssl_certificate_key {{ secure['cert_dir'] }}/private/{{ secure['common_name'] }}.pem;

        location ~ /.well-known {
            root {{ secure['cert_dir'] }}/well-known;
        }
        {%- endif %}

        {% if nginx_upstreams | default(false) %}{% for channel in nginx_upstreams -%}
        location {{ channel.path | default('/') }} {
            proxy_pass http://{{ channel.upstream }}/;
            proxy_pass_request_headers on;
        }
        {% endfor %}{% endif %}

    }
}
